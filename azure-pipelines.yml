trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  majorVersion: 2
  minorVersion: 0
  patchVersion: $[counter(variables['minorVersion'], 0)]
  version: $(majorVersion).$(minorVersion).$(patchVersion)

name: $(majorVersion).$(minorVersion).$(patchVersion)


steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: 'NuGet Restore'
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Pack'
  inputs:
    command: 'pack'
    packagesToPack: '$(solution)'
    configuration: '$(buildConfiguration)'
    packDirectory: 'artifacts'
    versioningScheme: 'off'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    PathtoPublish: 'artifacts'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: NuGetCommand@2
  displayName: 'Push NuGet Packages'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    command: 'push'
    packagesToPush: 'artifacts/**/*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NuGet UcDotNetAdmin'
